pipeline {
  agent {
    docker {
      image 'shaikabdul431/maven-java17-ultimate-ci-cd-project-image:v2'
      args '--user root -v /home/jenkins/agent/workspace:/workspace -w /workspace'
    }
  }

  environment {
    SONAR_URL = "http://13.234.38.62:9000"
    DOCKER_IMAGE = "shaikabdul431/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "CI-CD-setup-Jenkins"
    GIT_USER_NAME = "AbdulR431"
  }

  stages {
    stage('Build and Test') {
      steps {
        sh 'cd /workspace/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd /workspace/java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh '''
            cd /workspace/java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File and Push') {
      agent any
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "www.abdularshaik786@gmail.com"
            git config user.name "AbdulR431"

            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
